language: cpp
dist: trusty
sudo: false
matrix:
  include:

  - sudo: true
    services: docker
    env: PYTHON=3.5 CPP=14 GCC=6
  - sudo: true
    services: docker
    env: PYTHON=3.6 CPP=17 GCC=7

cache:
  directories:
  - $HOME/.local/bin
  - $HOME/.local/lib
  - $HOME/.local/include
  - $HOME/Library/Python
before_install:
- |
  # Configure build variables
  if [ "$TRAVIS_OS_NAME" = "linux" ]; then
    EXTRA_PACKAGES+=" g++-$GCC"
    export CXX=g++-$GCC CC=gcc-$GCC
    
    if [ "$GCC" = "6" ]; then DOCKER=debian:stretch
    elif [ "$GCC" = "7" ]; then DOCKER=debian:buster
    fi
  fi
  if [ -n "$CPP" ]; then CPP=-std=c++$CPP; fi
- |
  # Initialize environment
  set -e
  if [ -n "$DOCKER" ]; then
    docker pull $DOCKER

    containerid=$(docker run --detach --tty \
      --volume="$PWD":/matching-engine --workdir=/matching-engine \
      --env="CC=$CC" --env="CXX=$CXX" --env="DEBIAN_FRONTEND=$DEBIAN_FRONTEND" \
      --env=GCC_COLORS=\  \
      $DOCKER)
    SCRIPT_RUN_PREFIX="docker exec --tty $containerid"
    $SCRIPT_RUN_PREFIX sh -c 'for s in 0 15; do sleep $s; apt-get update && apt-get -qy dist-upgrade && break; done'
  fi
  set +e
install:
- |
  # Install dependencies
  set -e
  if [ -n "$DOCKER" ]; then
    $SCRIPT_RUN_PREFIX sh -c "for s in 0 15; do sleep \$s; \
      apt-get -qy --no-install-recommends install \
        $PY_DEBUG python$PYTHON-dev python$PY-pytest \
        libboost-dev cmake make ${EXTRA_PACKAGES} && break; done"
  fi
  set +e

script:
- $SCRIPT_RUN_PREFIX ./bootstrap.py
- $SCRIPT_RUN_PREFIX ./waf configure
- $SCRIPT_RUN_PREFIX ./waf build -j2

after_script:
- if [ -n "$DOCKER" ]; then docker stop "$containerid"; docker rm "$containerid"; fi
